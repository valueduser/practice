---
import HamburgerMenu from '@components/HamburgerMenu.astro'

interface Props {
  title?: string
  userName?: string | null
}

const { title = 'TBD', userName } = Astro.props

const getImageSources = () => {
  const sources = ["'self'", 'data:']

  console.log('Environment:', import.meta.env.MODE)

  if (import.meta.env.DEV) {
    sources.push('127.0.0.1:8090', 'localhost:8090')
  } else {
    sources.push('pocketbase.railway.internal:8080')
    const productionDomain =
      import.meta.env.PUBLIC_POCKETBASE_DOMAIN ||
      'pocketbase-production-7ee4.up.railway.app'
    sources.push(productionDomain)
  }

  return sources.join(' ')
}

const imageSources = getImageSources()
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content="A workout managment tool" />
    <meta
      http-equiv="Content-Security-Policy"
      content={`
      default-src 'self' data:;
      script-src 'self' 'unsafe-inline' 'unsafe-eval';
      connect-src 'self';
      img-src ${imageSources};
      style-src 'self' 'unsafe-inline';
      object-src 'none';
    `}
    />
    <script>
      import htmx from 'htmx.org'
      import Alpine from 'alpinejs'

      declare global {
        interface Window {
          htmx: typeof htmx
          Alpine: typeof Alpine
        }
      }

      window.htmx = htmx
      window.Alpine = Alpine
      Alpine.start()
    </script>
  </head>
  <body x-data hx-boost="true">
    <HamburgerMenu userName={userName} />
    <slot />
  </body>
</html>
